# QuickConvert  nowoczesny App for Android

A sleek and modern multi-tool converter application for Android, built with Jetpack Compose and Material 3. This app serves as a showcase of modern UI/UX principles, clean architecture, and integration with live web services.

## ‚ú® App Screenshots & Demo

*(**Important**: Replace the placeholder links below with your own screenshots and a screen recording GIF. You can drag and drop images directly into the GitHub editor to upload them.)*

| Calculator | Temperature Converter | Speed Converter | Currency Converter |
| :---: | :---: | :---: | :---: |
| <img src="URL_TO_YOUR_CALCULATOR_SCREENSHOT.png" width="200"> | <img src="URL_TO_YOUR_TEMPERATURE_SCREENSHOT.png" width="200"> | <img src="URL_TO_YOUR_SPEED_SCREENSHOT.png" width="200"> | <img src="URL_TO_YOUR_CURRENCY_SCREENSHOT.png" width="200"> |

**App Demo (GIF):**

![App Demo GIF](URL_TO_YOUR_APP_DEMO.gif)

## üåü Features

* **üí∞ Currency Converter:** Fetches live, real-time exchange rates from a REST API to provide accurate conversions between over 150 world currencies. The UI features a dynamic, searchable list and a custom keypad for a seamless user experience.
* **üå°Ô∏è Temperature Converter:** An interactive converter for Celsius, Fahrenheit, and Kelvin. It features a custom keypad and impressive display boxes that highlight the active field.
* **üèéÔ∏è Speed Converter:** A tool for converting between various speed units (km/h, mph, m/s, km/s) that reuses the polished UI components from the Temperature Converter for a consistent design.
* **üßÆ Modern Calculator:** A beautiful and functional calculator built with a strong focus on UI/UX. It features a professional layout, satisfying button press animations, and robust logic for all standard operations, including percentages.
* **Modern & Responsive UI:** Built entirely with Jetpack Compose and Material 3, the app supports both **Light and Dark themes**.

## üõ†Ô∏è Tech Stack & Architecture

This project was built using a modern Android tech stack and follows the recommended MVVM architecture.

### Tech Stack
* **Kotlin**: The official programming language for Android development.
* **Jetpack Compose**: Android's modern, declarative UI toolkit.
* **Material 3**: The latest version of Google's design system.
* **Coroutines**: For managing background threads and asynchronous operations, especially for API calls.
* **Retrofit & Gson**: The industry-standard libraries for making network requests and parsing JSON data.
* **Jetpack Navigation**: For handling all in-app navigation between screens.
* **ViewModel**: To store and manage UI-related data in a lifecycle-conscious way.

### Architecture
* **MVVM (Model-View-ViewModel)**: The app is structured using the MVVM pattern, which separates the UI (View) from the business logic (ViewModel). Each converter has its own dedicated ViewModel to manage its state and events.

## üöÄ How to Build

To build and run this project, you will need to:

1.  Clone this repository.
2.  Open the project in a recent version of Android Studio.
3.  Get a free API key from [exchangerate-api.com](https://www.exchangerate-api.com).
4.  Open the file `app/src/main/java/com/varun/quickconvert/CurrencyViewModel.kt`.
5.  Replace the placeholder API key with your own:
    ```kotlin
    private val apiKey = "YOUR_API_KEY_HERE"
    ```
6.  Build and run the app.

## üôè Acknowledgments

Currency conversion data is provided by the [ExchangeRate-API](https://www.exchangerate-api.com).
